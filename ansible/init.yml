- hosts: goons
  ignore_errors: yes
  tasks:

    - name: create new ext4 primary partition for qserv data
      community.general.parted:
        device: /dev/vdb
        label: gpt
        flags: [ lvm ]
        number: 1
        state: present
        fs_type: ext4
      become: yes
      tags:
      - tagsfs
    - name: format qserv-data partition  
      filesystem:
        fstype: ext4
        dev: /dev/vdb1
      become: yes
      tags:
      - tagsfs
    - name: mount vdb1 as qserv-data 
      mount:
        path: /qserv-data
        src: /dev/vdb1
        fstype: ext4
        state: mounted 
      become: yes
      tags:
      - tagsfs


- hosts: all
  ignore_errors: yes
  roles:
    - mob_init



- hosts: boss
  ignore_errors: yes
  roles:
    - kubernetes_boss
  tasks:
    
    - name: ssh-keygen
      community.crypto.openssh_keypair:
        path: /home/ubuntu/.ssh/jump_id_ssh_rsa
      tags:
      - ssh-setup

    - name: fetch ssh public key
      ansible.builtin.fetch:
        dest: /tmp/qserv_tmp/ssh-keys
        src: /home/ubuntu/.ssh/jump_id_ssh_rsa.pub      
        
      tags:
      - ssh-setup

- hosts: goons
  ignore_errors: yes
  tasks:    
    - name: deploy jump host ssh key
      authorized_key:
        user: ubuntu
        state: present
        key: "{{ lookup('file', '/tmp/qserv_tmp/ssh-keys/sv-qserv-dev-jump/home/ubuntu/.ssh/jump_id_ssh_rsa.pub') }}"
      tags:
      - ssh-setup
      
  hosts: goons
  ignore_errors: yes
  roles:
    - kubernetes_goon

- hosts: goons
  ignore_errors: yes
  tasks:
    - name : set up root qserv-data directory
      file:
        path: /qserv-data/
        state: directory
        owner: root
        group: root
        mode: 0755
      become: yes
      tags:
        - qserv

- hosts: goons
  ignore_errors: yes
  tasks:
    - name : set up qserv-data/default directory
      file:
        path: /qserv-data/default/
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: 0755
      become: yes
      tags:
        - qserv

- hosts: czar:utility_nodes
  ignore_errors: yes
  tasks:
    - name: set up ingest directory
      file:
        path: /qserv-data/default/ingest
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: 0775
      become: yes
      tags:
        - qserv 

- hosts: czar:utility_nodes
  ignore_errors: yes
  tasks:
    - name: set up replication directory
      file:
        path: /qserv-data/default/replication
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: 0775
      become: yes
      tags:
        - qserv 

- hosts: goons
  ignore_errors: yes
  tasks:
    - name: set up qserv directory
      file:
        path: /qserv-data/default/qserv
        state: directory
        owner: ubuntu
        group: ubuntu
        mode: 0775
      become: yes
      tags:
        - qserv       

- hosts: jumphost
  ignore_errors: yes
  #become: yes
  vars:
    ansible_python_interpreter: /usr/bin/python3
        
  tasks:
          #- name: openshift #download openshift 
      #shell: pip install openshift pyyaml kubernetes 
      #tags:
      #  - boss
    - name: py install
      become: yes
      shell: apt install python3-pip -y
      tags: pip
          #- name: conf
          #k8s:
          #kubeconfig: ~/.kube/config
          #tags: 
      #- boss
      #- test5
    - name: Install requests python package
      become: yes
      pip:
        name: requests
      tags: 
        - boss
    - name: skateful
      become: yes
      shell: git clone https://github.com/k8s-school/skateful.git
      tags:
        - hi2
    - name: pv_copy
      become: yes
      ansible.builtin.copy:
        src: "~/qserv-test/{{ item }}"
        dest: "/home/ubuntu/skateful/{{ item }}"
        mode: 0644
        owner: root
        group: root
        #overwrite: yes
        #remote_src: true
      tags: 
        - d_new
        - hi
      vars:
        ansible_python_interpreter: "/usr/bin/python3"  
      with_items:
              #- "pvc.sh"
        - "env.sh"
          # - name: install community.kubernetes
          #shell: ansible-galaxy collection install community.kubernetes
          #tagsi: 
          # - d_new
    - name: pyaml k8s
      become: yes
      shell: pip install openshift pyyaml kubernetes
      tags:
        - d_new      
          #- name: pv_sh
          #kubernetes.core.k8s:
          #kubeconfig: "/home/ubuntu/.kube/config"
          #tags:
          #- d_new1
          #- name: skate    
          #kubernetes.core.k8s:
          #kubeconfig: "/home/ubuntu/.kube/config"
          #state: present
          #src: /home/ubuntu/skateful/out/
      #remote_src: true

      
      #cmd: pvc.sh

    - name: manifest
      become: yes
      command: bash /home/ubuntu/skateful/create-manifests.sh
      tags: 
        - test2


    - name: kubelet
      command: kubectl apply -n default -f /home/ubuntu/skateful/out/ 
      tags:
        - test3
     

    - name: wget
      become: yes
      shell: wget https://qserv-operator.lsst.io/install/main.html#with-custom-settings;  RELEASE=RELEASE='"'"$(grep -m 1 'RELEASE' main.html | awk -F '[;&]' '{print $3}')"'"'; echo $RELEASE >> /etc/environment
      register: RELEASE
      tags:
        - test2

    - name: git
      become: yes
      shell: git clone --depth 1 --single-branch -b "$RELEASE" https://github.com/lsst/qserv-operator
      tags:
        - test2

    - name: kustomization
      become: yes
      shell: cp -r qserv-operator/manifests/gke-qserv-prod/ qserv-operator/manifests/somerville-lsst-qserv
      tags:
        - test3

    - name: base
      become: yes
      shell: sed -i 's|- ../gke-qserv-dev|- ../base|g' qserv-operator/manifests/somerville-lsst-qserv/kustomization.yaml
      tags:
        - test2

    - name: cert
      command: kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.11.0/cert-manager.yaml



    - name: assign_util
      command: kubectl label nodes sv-qserv-dev-utility-1 tier=utility --overwrite
      tags:
        - test2

    - name: apply_kustomization
      command: kubectl apply -f https://raw.githubusercontent.com/lsst/qserv-operator/$RELEASE/manifests/operator.yaml 
      tags:
        - test3

    - name: apply manifest
      command: kubectl apply -k /home/ubuntu/qserv-operator/manifests/somerville-lsst-qserv/
      tags:
        - test3      

    - name: git lfs
      become: yes
      apt:
        name: git-lfs
        state: present
      tags:
        - new










