- name: Add overlay module
  become: yes
  modprobe:
    name: overlay
    state: present
  tags: 
    - basic

- name: Add br_netfilter module
  become: yes
  modprobe:
    name: br_netfilter
    state: present
  tags: 
    - basic

- name: sysctl read values from all system directories
  become: yes
  shell: sysctl --system
  tags: 
    - basic

- name: De-armor docker gpg key
  become: yes
  shell: 'curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg --yes'
  tags:
    - docker

- name: Add Docker apt repository
  become: yes
  apt_repository:
    filename: docker
    repo: "deb [signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu jammy stable"
    state: present
  tags:
    - docker 
    - basic 

- name: apt-get update
  become: yes
  apt:
    update_cache: yes
  tags:
    - docker
    - basic

- name: apt-get upgrade
  become: yes
  apt:
    upgrade: dist
  tags: 
    - basic

- name: apt-get install apt-transport-https
  become: yes
  apt:
    name: apt-transport-https
    state: latest
  tags:
    - docker
    - basic

- name: apt-get install git
  become: yes
  apt:
    name: git
    state: latest
  tags:
    - cri-dockerd
    - basic

- name: apt-get install ca-certificates
  become: yes
  apt:
    name: ca-certificates
    state: latest
  tags:
    - docker
    - basic

- name: apt-get install curl
  become: yes
  apt:
    name: curl
    state: latest
  tags:
    - docker
    - basic

- name: apt-get install gnupg2
  become: yes
  apt:
    name: gnupg2
    state: latest
  tags:
    - docker
    - basic

- name: apt-get install software-properties-common
  become: yes
  apt:
    name: software-properties-common
    state: latest
  tags:
    - docker
    - basic

- name: apt-get install containerd.io
  become: yes
  apt:
    name: containerd.io
    state: latest
  tags:
    - docker
    - basic

- name: apt-get install docker-ce
  become: yes
  apt:
    name: docker-ce
    state: latest
  tags:
    - docker
    - basic

- name: apt-get install docker-ce-cli
  become: yes
  apt:
    name: docker-ce-cli
    state: latest
  tags:
    - docker
    - basic

- name: create /etc/systemd/system/docker.service.d
  become: yes
  file: 
    path: /etc/systemd/system/docker.service.d
    state: directory
  tags: 
    - docker

- name: create /etc/docker/
  become: yes
  file: 
    path: /etc/docker/
    state: directory
  tags: 
    - docker

- name: create /etc/docker/daemon.json
  become: yes
  ansible.builtin.template:
    src: daemon.json
    owner: root
    group: root
    mode: '0644'
    dest: /etc/docker/daemon.json
  tags:
    - docker

- name: restart docker service
  become: yes
  ansible.builtin.systemd:
    state: restarted
    daemon_reload: true
    name: docker
  tags:
    - docker

- name: enable docker service
  become: yes
  ansible.builtin.systemd:
    name: docker
    enabled: true
  tags:
    - docker

- name: create /etc/modules-load.d/k8s.conf
  become: yes
  ansible.builtin.template:
    src: k8s.conf
    owner: root
    group: root
    mode: '0644'
    dest: /etc/modules-load.d/k8s.conf
  tags:
    - docker

- name: create /etc/sysctl.d/kubernetes.conf
  become: yes
  ansible.builtin.template:
    src: kubernetes.conf
    owner: root
    group: root
    mode: '0644'
    dest: /etc/sysctl.d/kubernetes.conf
  tags:
    - docker

- name: get cri-dockerd version
  ansible.builtin.uri:
    url: https://api.github.com/repos/Mirantis/cri-dockerd/releases/latest
  register: cri_dockerd_api_result
  tags:
    - cri-dockerd

- name: Display cri-dockerd version
  debug: 
    msg: "{{ cri_dockerd_api_result.json.tag_name }}"
  register: cri_dockerd_version
  tags:
    - cri-dockerd


- name: Unarchive cri-dockerd release file
  ansible.builtin.unarchive:
    src: https://github.com/Mirantis/cri-dockerd/releases/download/v0.3.1/cri-dockerd-0.3.1.amd64.tgz
    dest: /home/ubuntu/
    remote_src: yes
  tags:
    - cri-dockerd

- name: Move cri-dockerd binary to usr/local/bin/
  become: yes
  ansible.builtin.copy:
    remote_src: yes
    owner: root
    group: root
    mode: 0755
    src: /home/ubuntu/cri-dockerd/cri-dockerd
    dest: /usr/local/bin/cri-dockerd
  tags:
    - cri-dockerd

- name: Download cri-docker.socket
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/Mirantis/cri-dockerd/master/packaging/systemd/cri-docker.socket
    dest: /etc/systemd/system/cri-docker.socket
    owner: ubuntu
    group: ubuntu
    mode: '664'
  become: yes
  tags:
    - cri-dockerd

- name: Download cri-docker.service
  ansible.builtin.get_url:
    url: https://raw.githubusercontent.com/Mirantis/cri-dockerd/master/packaging/systemd/cri-docker.service
    dest: /etc/systemd/system/cri-docker.service
    owner: ubuntu
    group: ubuntu
    mode: '664'  
  become: yes
  tags:
    - cri-dockerd

- name: Change location of binary in service definition
  become: yes
  ansible.builtin.lineinfile:
    path: /etc/systemd/system/cri-docker.service
    regexp: '^ExecStart='
    line: ExecStart=/usr/local/bin/cri-dockerd --container-runtime-endpoint fd://
  tags:
    - cri-dockerd

- name: Enable cri-docker.service
  become: yes
  ansible.builtin.systemd:
    name: cri-docker.service
    enabled: true
    daemon_reload: true
  tags:
    - cri-dockerd

- name: restart cri-docker.service
  become: yes
  ansible.builtin.systemd:
    state: restarted
    daemon_reload: true
    name: cri-docker.service
  tags:
    - cri-dockerd

- name: Enable cri-docker.socket
  become: yes
  ansible.builtin.systemd:
    name: cri-docker.socket
    enabled: true
    daemon_reload: true
  tags:
    - cri-dockerd   

- name: restart cri-docker.socket
  become: yes
  ansible.builtin.systemd:
    state: restarted
    daemon_reload: true
    name: cri-docker.socket
  tags:
    - cri-dockerd

- name: Download golang
  ansible.builtin.get_url:
    url: https://storage.googleapis.com/golang/getgo/installer_linux
    dest: /home/ubuntu/installer_linux
    owner: ubuntu
    group: ubuntu
    mode: '775'
  become: yes
  tags:
    - cri-dockerd

- name: Install golang
  shell: 
    cmd: |
      /home/ubuntu/installer_linux
  register: golang_installer_output
  tags:
    - cri-dockerd

- name: Git checkout of cri-dockerd
  ansible.builtin.git:
    repo: 'https://github.com/Mirantis/cri-dockerd.git'
    dest: /home/ubuntu/cri-dockerd
  tags:
    - cri-dockerd
    - dev

- name: create /home/ubuntu/cri-dockerd/bin
  become: yes
  file: 
    path: /home/ubuntu/cri-dockerd/bin
    state: directory
  tags:
    - cri-dockerd
    - dev

- name: get kubernetes gpg key
  become: yes
  get_url:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    dest: /etc/apt/keyrings/kubernetes.gpg
  tags:
    - kubernetes

- name: Add kubernetes apt repository
  become: yes
  apt_repository:
    filename: kubernetes
    repo: "deb [signed-by=/etc/apt/keyrings/kubernetes.gpg] https://apt.kubernetes.io/ kubernetes-xenial main"
    state: present
  tags:
    - kubernetes  

- name: apt-get kubernetes
  become: yes
  apt:
    pkg:
    - kubelet
    - kubeadm
    - kubectl
    - ipvsadm
  tags:
    - kubernetes      

